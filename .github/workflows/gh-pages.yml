name: Deploy GitHub Finder to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üîç Debug - Show all files
        run: |
          echo "üìÅ Complete repository structure:"
          find . -type f -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.md" | sort
          echo ""
          echo "üìÇ Directory tree:"
          ls -la
          if [ -d "css" ]; then
            echo "CSS folder contents:"
            ls -la css/
          fi
          if [ -d "js" ]; then
            echo "JS folder contents:"
            ls -la js/
          fi

      - name: üõ†Ô∏è Build site
        run: |
          mkdir -p public

          echo "üîÑ Copying files..."

          # Copy index.html from root
          if [ -f "index.html" ]; then
            cp index.html public/
            echo "‚úÖ Copied index.html"
          else
            echo "‚ùå index.html not found!"
            echo "Creating minimal index.html..."
            cat > public/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>GitHub Finder</title>
            <style>
              body { font-family: Arial; padding: 20px; background: linear-gradient(45deg, #667eea, #764ba2); }
              .container { background: white; padding: 40px; border-radius: 10px; max-width: 600px; margin: 0 auto; }
              input, button { padding: 10px; margin: 10px; border: 1px solid #ddd; border-radius: 5px; }
              button { background: #667eea; color: white; cursor: pointer; }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>üîç GitHub Finder</h1>
              <p>Enter a GitHub username to search:</p>
              <input type="text" id="username" placeholder="GitHub username">
              <button onclick="search()">Search</button>
              <div id="result"></div>
            </div>
            <script>
              async function search() {
                const username = document.getElementById('username').value;
                const result = document.getElementById('result');
                if (!username) return;
                
                try {
                  const response = await fetch(`https://api.github.com/users/${username}`);
                  const user = await response.json();
                  
                  if (response.ok) {
                    result.innerHTML = `
                      <h2>${user.name || user.login}</h2>
                      <img src="${user.avatar_url}" width="100" style="border-radius: 50%">
                      <p>Public Repos: ${user.public_repos}</p>
                      <p>Followers: ${user.followers}</p>
                      <a href="${user.html_url}" target="_blank">View Profile</a>
                    `;
                  } else {
                    result.innerHTML = '<p>User not found!</p>';
                  }
                } catch (error) {
                  result.innerHTML = '<p>Error occurred!</p>';
                }
              }
            </script>
          </body>
          </html>
          EOF
          fi

          # Try to copy CSS - multiple attempts
          CSS_COPIED=false
          for css_path in "css/style.css" "style.css" "styles.css"; do
            if [ -f "$css_path" ]; then
              cp "$css_path" public/style.css
              echo "‚úÖ Copied CSS from $css_path"
              CSS_COPIED=true
              break
            fi
          done

          if [ "$CSS_COPIED" = false ]; then
            echo "‚ö†Ô∏è No CSS file found, creating basic styles..."
            cat > public/style.css << 'EOF'
          /* GitHub Finder Basic Styles */
          * { margin: 0; padding: 0; box-sizing: border-box; }
          body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea, #764ba2);
            min-height: 100vh;
            padding: 20px;
          }
          .container {
            max-width: 800px;
            margin: 0 auto;
            background: rgba(255,255,255,0.95);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
          }
          h1 { 
            text-align: center; 
            color: #333; 
            margin-bottom: 30px;
            font-size: 2.5rem;
          }
          input, button {
            padding: 15px;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
          }
          input {
            width: 70%;
            margin-right: 10px;
            border: 2px solid #ddd;
          }
          button {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            cursor: pointer;
          }
          EOF
          fi

          # Try to copy JS
          JS_COPIED=false
          for js_path in "js/app.js" "app.js" "script.js"; do
            if [ -f "$js_path" ]; then
              cp "$js_path" public/app.js
              echo "‚úÖ Copied JS from $js_path"
              JS_COPIED=true
              break
            fi
          done

          if [ "$JS_COPIED" = false ]; then
            echo "‚ö†Ô∏è No JS file found, creating basic script..."
            cat > public/app.js << 'EOF'
          console.log('GitHub Finder loaded successfully!');

          document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM ready - GitHub Finder initialized');
          });
          EOF
          fi

          # Copy other files
          [ -f "README.md" ] && cp README.md public/readme.md
          [ -f "favicon.ico" ] && cp favicon.ico public/

      - name: üìã Final check
        run: |
          echo "üì¶ Final build contents:"
          ls -la public/
          echo ""
          echo "üìè File sizes:"
          du -h public/*
          echo ""
          echo "üîç HTML check:"
          head -10 public/index.html

      - name: üîß Setup Pages
        uses: actions/configure-pages@v4

      - name: üì§ Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./public"

      - name: üöÄ Deploy
        id: deployment
        uses: actions/deploy-pages@v4

      - name: ‚úÖ Success
        run: |
          echo "üéâ Deployed to: ${{ steps.deployment.outputs.page_url }}"
