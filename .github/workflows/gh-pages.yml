name: Deploy GitHub Finder to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Pages
        uses: actions/configure-pages@v4

      - name: 🔍 Complete repository scan
        run: |
          echo "📁 Repository structure analysis:"
          echo "=================================="
          find . -type f -name "*.html" -o -name "*.css" -o -name "*.js" | head -20
          echo ""
          echo "📂 Directory listing:"
          ls -la
          echo ""
          echo "🔍 Specific file checks:"
          if [ -f 'index.html' ]; then
            echo "Root index.html: ✅ EXISTS"
          else
            echo "Root index.html: ❌ MISSING"
          fi

          if [ -d 'html' ]; then
            echo "HTML folder: ✅ EXISTS"
          else
            echo "HTML folder: ❌ MISSING"
          fi

          if [ -d 'css' ]; then
            echo "CSS folder: ✅ EXISTS"
          else
            echo "CSS folder: ❌ MISSING"
          fi

          if [ -d 'js' ]; then
            echo "JS folder: ✅ EXISTS"
          else
            echo "JS folder: ❌ MISSING"
          fi

      - name: 📂 Smart file detection and copying
        run: |
          echo "🏗️ Creating public directory..."
          mkdir -p public

          echo "🧠 Smart file detection started..."

          # Find and copy HTML file
          HTML_FOUND=false

          if [ -f "index.html" ]; then
            cp index.html public/index.html
            echo "✅ Found and copied: ROOT/index.html → public/index.html"
            HTML_FOUND=true
          elif [ -f "html/index.html" ]; then
            cp html/index.html public/index.html
            echo "✅ Found and copied: html/index.html → public/index.html"
            HTML_FOUND=true
          else
            echo "❌ No index.html found in root or html/ folder!"
          fi

          # Find and copy CSS file
          CSS_FOUND=false
          if [ -f "style.css" ]; then
            cp style.css public/style.css
            echo "✅ Found and copied: ROOT/style.css → public/style.css"
            CSS_FOUND=true
          elif [ -f "css/style.css" ]; then
            cp css/style.css public/style.css
            echo "✅ Found and copied: css/style.css → public/style.css"
            CSS_FOUND=true
          else
            echo "⚠️ No style.css found in root or css/ folder"
          fi

          # Find and copy JS file
          JS_FOUND=false
          if [ -f "app.js" ]; then
            cp app.js public/app.js
            echo "✅ Found and copied: ROOT/app.js → public/app.js"
            JS_FOUND=true
          elif [ -f "js/app.js" ]; then
            cp js/app.js public/app.js
            echo "✅ Found and copied: js/app.js → public/app.js"
            JS_FOUND=true
          else
            echo "⚠️ No app.js found in root or js/ folder"
          fi

          # Copy README
          if [ -f "README.md" ]; then
            cp README.md public/readme.md
            echo "✅ Copied: README.md → public/readme.md"
          fi

          # Create emergency HTML if needed
          if [ "$HTML_FOUND" = "false" ]; then
            echo "💥 CRITICAL ERROR: No HTML file found!"
            echo "📝 Creating emergency index.html..."
            cat > public/index.html << 'HTMLEOF'
          <!DOCTYPE html>
          <html lang="ko">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>GitHub Finder - File Missing</title>
              <style>
                  body { 
                      font-family: Arial, sans-serif; 
                      text-align: center; 
                      padding: 50px; 
                      background: linear-gradient(135deg, #667eea, #764ba2);
                      color: white;
                      min-height: 100vh;
                      margin: 0;
                      display: flex;
                      align-items: center;
                      justify-content: center;
                      flex-direction: column;
                  }
                  .container {
                      background: rgba(255,255,255,0.1);
                      padding: 40px;
                      border-radius: 20px;
                      backdrop-filter: blur(10px);
                  }
                  .error { color: #ff6b6b; font-size: 1.2em; margin: 20px 0; }
                  .info { color: #4ecdc4; margin: 15px 0; }
                  .code { 
                      background: rgba(0,0,0,0.3); 
                      padding: 15px; 
                      border-radius: 10px; 
                      font-family: monospace;
                      margin: 20px 0;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>🔍 GitHub Finder</h1>
                  <p class="error">⚠️ index.html 파일을 찾을 수 없습니다</p>
                  <p class="info">다음 위치 중 하나에 파일을 업로드해주세요:</p>
                  <div class="code">
                      📁 저장소 루트/index.html<br>
                      📁 저장소 루트/html/index.html
                  </div>
                  <p class="info">파일 업로드 후 자동으로 다시 배포됩니다.</p>
              </div>
          </body>
          </html>
          HTMLEOF
            echo "🆘 Emergency index.html created"
          fi

      - name: 📋 Final verification
        run: |
          echo "🗂️ Final public directory contents:"
          ls -la public/
          echo ""
          echo "📊 File size report:"
          for file in public/*; do
            if [ -f "$file" ]; then
              size=$(wc -c < "$file")
              filename=$(basename "$file")
              echo "📄 $filename: $size bytes"
            fi
          done
          echo ""
          echo "🔍 index.html preview (first 5 lines):"
          head -5 public/index.html

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./public"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: ✅ Deployment summary
        run: |
          echo ""
          echo "🎉 Deployment completed!"
          echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo ""
          echo "📋 Deployment checklist:"
          echo "   ✅ Repository scanned"
          echo "   ✅ Files detected and copied"
          echo "   ✅ Static site built"
          echo "   ✅ Uploaded to GitHub Pages"
          echo "   ✅ Site is now live!"
          echo ""
          echo "🔗 Visit your GitHub Finder at the URL above!"
